[{"C:\\Users\\thanh\\Coderschool\\project5\\src\\index.js":"1","C:\\Users\\thanh\\Coderschool\\project5\\src\\App.js":"2","C:\\Users\\thanh\\Coderschool\\project5\\src\\components\\PublicNavbar.js":"3","C:\\Users\\thanh\\Coderschool\\project5\\src\\components\\PaginationBar.js":"4","C:\\Users\\thanh\\Coderschool\\project5\\src\\components\\SearchFrom.js":"5","C:\\Users\\thanh\\Coderschool\\project5\\src\\pages\\PopularPage.js":"6","C:\\Users\\thanh\\Coderschool\\project5\\src\\pages\\TopRatedPage.js":"7","C:\\Users\\thanh\\Coderschool\\project5\\src\\pages\\HomePage.js":"8","C:\\Users\\thanh\\Coderschool\\project5\\src\\apiService.js":"9","C:\\Users\\thanh\\Coderschool\\project5\\src\\components\\Rating.js":"10","C:\\Users\\thanh\\Coderschool\\project5\\src\\pages\\DetailPage.js":"11","C:\\Users\\thanh\\Coderschool\\project5\\src\\DataFetcher.js":"12"},{"size":146,"mtime":1607054547616,"results":"13","hashOfConfig":"14"},{"size":826,"mtime":1607304964537,"results":"15","hashOfConfig":"14"},{"size":882,"mtime":1607279232521,"results":"16","hashOfConfig":"14"},{"size":1713,"mtime":1606795334559,"results":"17","hashOfConfig":"14"},{"size":842,"mtime":1606806666816,"results":"18","hashOfConfig":"14"},{"size":4246,"mtime":1607279897775,"results":"19","hashOfConfig":"14"},{"size":4250,"mtime":1607279797382,"results":"20","hashOfConfig":"14"},{"size":4525,"mtime":1607310644166,"results":"21","hashOfConfig":"14"},{"size":1137,"mtime":1607267776447,"results":"22","hashOfConfig":"14"},{"size":456,"mtime":1607274774952,"results":"23","hashOfConfig":"14"},{"size":5527,"mtime":1607310219896,"results":"24","hashOfConfig":"14"},{"size":348,"mtime":1607277626199,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"5dpvsy",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\thanh\\Coderschool\\project5\\src\\index.js",[],["55","56"],"C:\\Users\\thanh\\Coderschool\\project5\\src\\App.js",[],"C:\\Users\\thanh\\Coderschool\\project5\\src\\components\\PublicNavbar.js",[],"C:\\Users\\thanh\\Coderschool\\project5\\src\\components\\PaginationBar.js",[],"C:\\Users\\thanh\\Coderschool\\project5\\src\\components\\SearchFrom.js",[],"C:\\Users\\thanh\\Coderschool\\project5\\src\\pages\\PopularPage.js",["57","58"],"import React, { useEffect, useState } from \"react\";\r\nimport { Card, Carousel, Col, Row } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport api from \"../apiService\";\r\nimport PaginationBar from \"../components/PaginationBar\";\r\nimport SearchForm from \"../components/SearchFrom\";\r\n\r\nconst PopularPage = () => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const [movieList, setMovieList] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const history = useHistory();\r\n  const totalPage = 20;\r\n\r\n  const handleClickMovie = (movieID) => {\r\n    history.push(`/movies/${movieID}`);\r\n  };\r\n  const handleSearchInputChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setQuery(searchInput);\r\n  };\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let res = await api.get(\r\n        `/movie/popular?${process.env.REACT_APP_API_KEY}&page=${pageNum}`\r\n      );\r\n      setMovieList(res.data.results);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getSearch = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let res = await api.get(\r\n        `/search/movie?${process.env.REACT_APP_API_KEY}&language=en-US&page=1&query=${query}`\r\n      );\r\n\r\n      setMovieList(res.data.results);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(\"Not found\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, [pageNum]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    if (query) {\r\n      getSearch();\r\n    } else {\r\n      getData();\r\n    }\r\n  }, [query]);\r\n\r\n  return (\r\n    <>\r\n      <Carousel>\r\n        <Carousel.Item interval={1000}>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${process.env.REACT_APP_IMAGE}${\r\n              movieList.length >= 3 ? movieList[0].poster_path : false\r\n            }`}\r\n            alt=\"First slide\"\r\n          />\r\n          <Carousel.Caption></Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item interval={500}>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${process.env.REACT_APP_IMAGE}${\r\n              movieList.length >= 3 ? movieList[1].poster_path : false\r\n            }`}\r\n            alt=\"Third slide\"\r\n          />\r\n          <Carousel.Caption></Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${process.env.REACT_APP_IMAGE}${\r\n              movieList.length >= 3 ? movieList[3].poster_path : false\r\n            }`}\r\n            alt=\"Third slide\"\r\n          />\r\n          <Carousel.Caption></Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n      <SearchForm\r\n        className={{}}\r\n        loading={loading}\r\n        searchInput={searchInput}\r\n        handleSearchChange={handleSearchInputChange}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n      <div>\r\n        <Row>\r\n          <Col style={{ marginRight: \"10%\", marginLeft: \"10%\" }}>\r\n            <div className=\"d-flex justify-content-around flex-wrap\">\r\n              {movieList.map((movie) => {\r\n                return (\r\n                  <Card\r\n                    style={{ width: \"27%\", margin: \"20px\" }}\r\n                    onClick={() => handleClickMovie(movie.id)}\r\n                  >\r\n                    <Card.Img\r\n                      variant=\"top\"\r\n                      src={`${process.env.REACT_APP_IMAGE}${movie.poster_path}`}\r\n                    />\r\n                    <Card.Body>\r\n                      <Card.Title>{movie.title}</Card.Title>\r\n                      <Card.Text>Scores: {movie.vote_average}</Card.Text>\r\n                      <Card.Text>Visited: {movie.popularity}</Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <PaginationBar\r\n        pageNum={pageNum}\r\n        totalPageNum={totalPage}\r\n        setPageNum={setPageNum}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PopularPage;\r\n","C:\\Users\\thanh\\Coderschool\\project5\\src\\pages\\TopRatedPage.js",["59","60"],"import React, { useEffect, useState } from \"react\";\r\nimport { Card, Carousel, Col, Row } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport api from \"../apiService\";\r\nimport PaginationBar from \"../components/PaginationBar\";\r\nimport SearchForm from \"../components/SearchFrom\";\r\n\r\nconst TopRatedPage = () => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const [movieList, setMovieList] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const history = useHistory();\r\n  const totalPage = 20;\r\n\r\n  const handleClickMovie = (movieID) => {\r\n    history.push(`/movies/${movieID}`);\r\n  };\r\n  const handleSearchInputChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setQuery(searchInput);\r\n  };\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let res = await api.get(\r\n        `/movie/top_rated?${process.env.REACT_APP_API_KEY}&page=${pageNum}`\r\n      );\r\n      setMovieList(res.data.results);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getSearch = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let res = await api.get(\r\n        `/search/movie?${process.env.REACT_APP_API_KEY}&language=en-US&page=1&query=${query}`\r\n      );\r\n\r\n      setMovieList(res.data.results);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(\"Not found\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, [pageNum]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    if (query) {\r\n      getSearch();\r\n    } else {\r\n      getData();\r\n    }\r\n  }, [query]);\r\n\r\n  return (\r\n    <>\r\n      <Carousel>\r\n        <Carousel.Item interval={1000}>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${process.env.REACT_APP_IMAGE}${\r\n              movieList.length >= 3 ? movieList[0].poster_path : false\r\n            }`}\r\n            alt=\"First slide\"\r\n          />\r\n          <Carousel.Caption></Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item interval={500}>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${process.env.REACT_APP_IMAGE}${\r\n              movieList.length >= 3 ? movieList[1].poster_path : false\r\n            }`}\r\n            alt=\"Third slide\"\r\n          />\r\n          <Carousel.Caption></Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${process.env.REACT_APP_IMAGE}${\r\n              movieList.length >= 3 ? movieList[3].poster_path : false\r\n            }`}\r\n            alt=\"Third slide\"\r\n          />\r\n          <Carousel.Caption></Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n      <SearchForm\r\n        className={{}}\r\n        loading={loading}\r\n        searchInput={searchInput}\r\n        handleSearchChange={handleSearchInputChange}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n      <div>\r\n        <Row>\r\n          <Col style={{ marginRight: \"10%\", marginLeft: \"10%\" }}>\r\n            <div className=\"d-flex justify-content-around flex-wrap\">\r\n              {movieList.map((movie) => {\r\n                return (\r\n                  <Card\r\n                    style={{ width: \"27%\", margin: \"20px\" }}\r\n                    onClick={() => handleClickMovie(movie.id)}\r\n                  >\r\n                    <Card.Img\r\n                      variant=\"top\"\r\n                      src={`${process.env.REACT_APP_IMAGE}${movie.poster_path}`}\r\n                    />\r\n                    <Card.Body>\r\n                      <Card.Title>{movie.title}</Card.Title>\r\n                      <Card.Text>Scores: {movie.vote_average}</Card.Text>\r\n                      <Card.Text>Visited: {movie.popularity}</Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <PaginationBar\r\n        pageNum={pageNum}\r\n        totalPageNum={totalPage}\r\n        setPageNum={setPageNum}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopRatedPage;\r\n","C:\\Users\\thanh\\Coderschool\\project5\\src\\pages\\HomePage.js",[],"C:\\Users\\thanh\\Coderschool\\project5\\src\\apiService.js",["61"],"import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\napi.interceptors.request.use(\r\n  function (request) {\r\n    // Do something before request is sent\r\n    console.log(\"Starting request\", request);\r\n    return request;\r\n  },\r\n  function (error) {\r\n    // Do something with request error\r\n    console.log(\"REQUEST ERROR\", error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\napi.interceptors.response.use(\r\n  function (response) {\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\r\n    // Do something with response data\r\n    console.log(\"Response\", response);\r\n    return response;\r\n  },\r\n  function (error) {\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // Do something with response error\r\n    console.log(error);\r\n    toast.error(error.response.data.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","C:\\Users\\thanh\\Coderschool\\project5\\src\\components\\Rating.js",[],"C:\\Users\\thanh\\Coderschool\\project5\\src\\pages\\DetailPage.js",["62"],"C:\\Users\\thanh\\Coderschool\\project5\\src\\DataFetcher.js",[],["63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":57,"column":6,"nodeType":"71","endLine":57,"endColumn":15,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":66,"column":6,"nodeType":"71","endLine":66,"endColumn":13,"suggestions":"74"},{"ruleId":"69","severity":1,"message":"70","line":57,"column":6,"nodeType":"71","endLine":57,"endColumn":15,"suggestions":"75"},{"ruleId":"69","severity":1,"message":"73","line":66,"column":6,"nodeType":"71","endLine":66,"endColumn":13,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":15},{"ruleId":"69","severity":1,"message":"81","line":80,"column":6,"nodeType":"71","endLine":80,"endColumn":8,"suggestions":"82"},{"ruleId":"65","replacedBy":"83"},{"ruleId":"67","replacedBy":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["87"],"React Hook useEffect has missing dependencies: 'getData' and 'getSearch'. Either include them or remove the dependency array.",["88"],["89"],["90"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getMovieDetail', 'getReview', 'getTrailer', and 'isLoading'. Either include them or remove the dependency array.",["91"],["85"],["86"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"92","fix":"96"},{"desc":"94","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [getData, pageNum]",{"range":"100","text":"101"},"Update the dependencies array to be: [getData, getSearch, query]",{"range":"102","text":"103"},{"range":"104","text":"101"},{"range":"105","text":"103"},"Update the dependencies array to be: [getMovieDetail, getReview, getTrailer, isLoading]",{"range":"106","text":"107"},[1613,1622],"[getData, pageNum]",[1747,1754],"[getData, getSearch, query]",[1616,1625],[1750,1757],[2198,2200],"[getMovieDetail, getReview, getTrailer, isLoading]"]