[{"C:\\Users\\thanh\\Coderschool\\project5\\src\\index.js":"1","C:\\Users\\thanh\\Coderschool\\project5\\src\\App.js":"2","C:\\Users\\thanh\\Coderschool\\project5\\src\\components\\PublicNavbar.js":"3","C:\\Users\\thanh\\Coderschool\\project5\\src\\components\\PaginationBar.js":"4","C:\\Users\\thanh\\Coderschool\\project5\\src\\components\\SearchFrom.js":"5","C:\\Users\\thanh\\Coderschool\\project5\\src\\pages\\PopularPage.js":"6","C:\\Users\\thanh\\Coderschool\\project5\\src\\pages\\TopRatedPage.js":"7","C:\\Users\\thanh\\Coderschool\\project5\\src\\pages\\HomePage.js":"8","C:\\Users\\thanh\\Coderschool\\project5\\src\\apiService.js":"9","C:\\Users\\thanh\\Coderschool\\project5\\src\\components\\Rating.js":"10","C:\\Users\\thanh\\Coderschool\\project5\\src\\pages\\DetailPage.js":"11","C:\\Users\\thanh\\Coderschool\\project5\\src\\DataFetcher.js":"12"},{"size":146,"mtime":1607054547616,"results":"13","hashOfConfig":"14"},{"size":826,"mtime":1607304964537,"results":"15","hashOfConfig":"14"},{"size":882,"mtime":1607279232521,"results":"16","hashOfConfig":"14"},{"size":1713,"mtime":1606795334559,"results":"17","hashOfConfig":"14"},{"size":842,"mtime":1606806666816,"results":"18","hashOfConfig":"14"},{"size":4246,"mtime":1607279897775,"results":"19","hashOfConfig":"14"},{"size":4250,"mtime":1607279797382,"results":"20","hashOfConfig":"14"},{"size":4345,"mtime":1607279800532,"results":"21","hashOfConfig":"14"},{"size":1137,"mtime":1607267776447,"results":"22","hashOfConfig":"14"},{"size":456,"mtime":1607274774952,"results":"23","hashOfConfig":"14"},{"size":6208,"mtime":1607305348019,"results":"24","hashOfConfig":"14"},{"size":348,"mtime":1607277626199,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"5dpvsy",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\thanh\\Coderschool\\project5\\src\\index.js",[],["56","57"],"C:\\Users\\thanh\\Coderschool\\project5\\src\\App.js",[],"C:\\Users\\thanh\\Coderschool\\project5\\src\\components\\PublicNavbar.js",[],"C:\\Users\\thanh\\Coderschool\\project5\\src\\components\\PaginationBar.js",[],"C:\\Users\\thanh\\Coderschool\\project5\\src\\components\\SearchFrom.js",[],"C:\\Users\\thanh\\Coderschool\\project5\\src\\pages\\PopularPage.js",["58","59"],"import React, { useEffect, useState } from \"react\";\r\nimport { Card, Carousel, Col, Row } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport api from \"../apiService\";\r\nimport PaginationBar from \"../components/PaginationBar\";\r\nimport SearchForm from \"../components/SearchFrom\";\r\n\r\nconst PopularPage = () => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const [movieList, setMovieList] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const history = useHistory();\r\n  const totalPage = 20;\r\n\r\n  const handleClickMovie = (movieID) => {\r\n    history.push(`/movies/${movieID}`);\r\n  };\r\n  const handleSearchInputChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setQuery(searchInput);\r\n  };\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let res = await api.get(\r\n        `/movie/popular?${process.env.REACT_APP_API_KEY}&page=${pageNum}`\r\n      );\r\n      setMovieList(res.data.results);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getSearch = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let res = await api.get(\r\n        `/search/movie?${process.env.REACT_APP_API_KEY}&language=en-US&page=1&query=${query}`\r\n      );\r\n\r\n      setMovieList(res.data.results);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(\"Not found\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, [pageNum]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    if (query) {\r\n      getSearch();\r\n    } else {\r\n      getData();\r\n    }\r\n  }, [query]);\r\n\r\n  return (\r\n    <>\r\n      <Carousel>\r\n        <Carousel.Item interval={1000}>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${process.env.REACT_APP_IMAGE}${\r\n              movieList.length >= 3 ? movieList[0].poster_path : false\r\n            }`}\r\n            alt=\"First slide\"\r\n          />\r\n          <Carousel.Caption></Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item interval={500}>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${process.env.REACT_APP_IMAGE}${\r\n              movieList.length >= 3 ? movieList[1].poster_path : false\r\n            }`}\r\n            alt=\"Third slide\"\r\n          />\r\n          <Carousel.Caption></Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${process.env.REACT_APP_IMAGE}${\r\n              movieList.length >= 3 ? movieList[3].poster_path : false\r\n            }`}\r\n            alt=\"Third slide\"\r\n          />\r\n          <Carousel.Caption></Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n      <SearchForm\r\n        className={{}}\r\n        loading={loading}\r\n        searchInput={searchInput}\r\n        handleSearchChange={handleSearchInputChange}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n      <div>\r\n        <Row>\r\n          <Col style={{ marginRight: \"10%\", marginLeft: \"10%\" }}>\r\n            <div className=\"d-flex justify-content-around flex-wrap\">\r\n              {movieList.map((movie) => {\r\n                return (\r\n                  <Card\r\n                    style={{ width: \"27%\", margin: \"20px\" }}\r\n                    onClick={() => handleClickMovie(movie.id)}\r\n                  >\r\n                    <Card.Img\r\n                      variant=\"top\"\r\n                      src={`${process.env.REACT_APP_IMAGE}${movie.poster_path}`}\r\n                    />\r\n                    <Card.Body>\r\n                      <Card.Title>{movie.title}</Card.Title>\r\n                      <Card.Text>Scores: {movie.vote_average}</Card.Text>\r\n                      <Card.Text>Visited: {movie.popularity}</Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <PaginationBar\r\n        pageNum={pageNum}\r\n        totalPageNum={totalPage}\r\n        setPageNum={setPageNum}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PopularPage;\r\n","C:\\Users\\thanh\\Coderschool\\project5\\src\\pages\\TopRatedPage.js",["60","61"],"import React, { useEffect, useState } from \"react\";\r\nimport { Card, Carousel, Col, Row } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport api from \"../apiService\";\r\nimport PaginationBar from \"../components/PaginationBar\";\r\nimport SearchForm from \"../components/SearchFrom\";\r\n\r\nconst TopRatedPage = () => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const [movieList, setMovieList] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const history = useHistory();\r\n  const totalPage = 20;\r\n\r\n  const handleClickMovie = (movieID) => {\r\n    history.push(`/movies/${movieID}`);\r\n  };\r\n  const handleSearchInputChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setQuery(searchInput);\r\n  };\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let res = await api.get(\r\n        `/movie/top_rated?${process.env.REACT_APP_API_KEY}&page=${pageNum}`\r\n      );\r\n      setMovieList(res.data.results);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getSearch = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let res = await api.get(\r\n        `/search/movie?${process.env.REACT_APP_API_KEY}&language=en-US&page=1&query=${query}`\r\n      );\r\n\r\n      setMovieList(res.data.results);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(\"Not found\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, [pageNum]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    if (query) {\r\n      getSearch();\r\n    } else {\r\n      getData();\r\n    }\r\n  }, [query]);\r\n\r\n  return (\r\n    <>\r\n      <Carousel>\r\n        <Carousel.Item interval={1000}>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${process.env.REACT_APP_IMAGE}${\r\n              movieList.length >= 3 ? movieList[0].poster_path : false\r\n            }`}\r\n            alt=\"First slide\"\r\n          />\r\n          <Carousel.Caption></Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item interval={500}>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${process.env.REACT_APP_IMAGE}${\r\n              movieList.length >= 3 ? movieList[1].poster_path : false\r\n            }`}\r\n            alt=\"Third slide\"\r\n          />\r\n          <Carousel.Caption></Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${process.env.REACT_APP_IMAGE}${\r\n              movieList.length >= 3 ? movieList[3].poster_path : false\r\n            }`}\r\n            alt=\"Third slide\"\r\n          />\r\n          <Carousel.Caption></Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n      <SearchForm\r\n        className={{}}\r\n        loading={loading}\r\n        searchInput={searchInput}\r\n        handleSearchChange={handleSearchInputChange}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n      <div>\r\n        <Row>\r\n          <Col style={{ marginRight: \"10%\", marginLeft: \"10%\" }}>\r\n            <div className=\"d-flex justify-content-around flex-wrap\">\r\n              {movieList.map((movie) => {\r\n                return (\r\n                  <Card\r\n                    style={{ width: \"27%\", margin: \"20px\" }}\r\n                    onClick={() => handleClickMovie(movie.id)}\r\n                  >\r\n                    <Card.Img\r\n                      variant=\"top\"\r\n                      src={`${process.env.REACT_APP_IMAGE}${movie.poster_path}`}\r\n                    />\r\n                    <Card.Body>\r\n                      <Card.Title>{movie.title}</Card.Title>\r\n                      <Card.Text>Scores: {movie.vote_average}</Card.Text>\r\n                      <Card.Text>Visited: {movie.popularity}</Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <PaginationBar\r\n        pageNum={pageNum}\r\n        totalPageNum={totalPage}\r\n        setPageNum={setPageNum}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopRatedPage;\r\n","C:\\Users\\thanh\\Coderschool\\project5\\src\\pages\\HomePage.js",["62","63"],"import React, { useEffect, useState } from \"react\";\r\nimport api from \"../apiService\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Card, Carousel, Col, Row } from \"react-bootstrap\";\r\n// import PublicPic from \"../components/PublicPic\";\r\nimport SearchForm from \"../components/SearchFrom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PaginationBar from \"../components/PaginationBar\";\r\n\r\nconst HomePage = () => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const [movieList, setMovieList] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const history = useHistory();\r\n  const totalPage = 20;\r\n\r\n  const handleClickMovie = (movieID) => {\r\n    history.push(`/movies/${movieID}`);\r\n  };\r\n  const handleSearchInputChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setQuery(searchInput);\r\n  };\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let res = await api.get(\r\n        `/movie/now_playing?${process.env.REACT_APP_API_KEY}&page=${pageNum}`\r\n      );\r\n      setMovieList(res.data.results);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getSearch = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let res = await api.get(\r\n        `/search/movie?${process.env.REACT_APP_API_KEY}&language=en-US&page=1&query=${query}`\r\n      );\r\n\r\n      setMovieList(res.data.results);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(\"Not found\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, [pageNum]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    if (query) {\r\n      getSearch();\r\n    } else {\r\n      getData();\r\n    }\r\n  }, [query]);\r\n\r\n  return (\r\n    <>\r\n      <Carousel>\r\n        <Carousel.Item interval={1000}>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${process.env.REACT_APP_IMAGE}${\r\n              movieList.length >= 3 ? movieList[0].poster_path : false\r\n            }`}\r\n            alt=\"First slide\"\r\n          />\r\n          <Carousel.Caption></Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item interval={500}>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${process.env.REACT_APP_IMAGE}${\r\n              movieList.length >= 3 ? movieList[1].poster_path : false\r\n            }`}\r\n            alt=\"Third slide\"\r\n          />\r\n          <Carousel.Caption></Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${process.env.REACT_APP_IMAGE}${\r\n              movieList.length >= 3 ? movieList[3].poster_path : false\r\n            }`}\r\n            alt=\"Third slide\"\r\n          />\r\n          <Carousel.Caption></Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n      <SearchForm\r\n        className={{}}\r\n        loading={loading}\r\n        searchInput={searchInput}\r\n        handleSearchChange={handleSearchInputChange}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n      <div>\r\n        <Row>\r\n          <Col style={{ marginRight: \"10%\", marginLeft: \"10%\" }}>\r\n            <div className=\"d-flex justify-content-around flex-wrap\">\r\n              {movieList.map((movie) => {\r\n                return (\r\n                  <Card\r\n                    style={{ width: \"27%\", margin: \"20px\" }}\r\n                    onClick={() => handleClickMovie(movie.id)}\r\n                  >\r\n                    <Card.Img\r\n                      variant=\"top\"\r\n                      src={`${process.env.REACT_APP_IMAGE}${movie.poster_path}`}\r\n                    />\r\n                    <Card.Body>\r\n                      <Card.Title>{movie.title}</Card.Title>\r\n                      <Card.Text>Scores: {movie.vote_average}</Card.Text>\r\n                      <Card.Text>Visited: {movie.popularity}</Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <PaginationBar\r\n        pageNum={pageNum}\r\n        totalPageNum={totalPage}\r\n        setPageNum={setPageNum}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\thanh\\Coderschool\\project5\\src\\apiService.js",["64"],"import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\napi.interceptors.request.use(\r\n  function (request) {\r\n    // Do something before request is sent\r\n    console.log(\"Starting request\", request);\r\n    return request;\r\n  },\r\n  function (error) {\r\n    // Do something with request error\r\n    console.log(\"REQUEST ERROR\", error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\napi.interceptors.response.use(\r\n  function (response) {\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\r\n    // Do something with response data\r\n    console.log(\"Response\", response);\r\n    return response;\r\n  },\r\n  function (error) {\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // Do something with response error\r\n    console.log(error);\r\n    toast.error(error.response.data.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","C:\\Users\\thanh\\Coderschool\\project5\\src\\components\\Rating.js",[],"C:\\Users\\thanh\\Coderschool\\project5\\src\\pages\\DetailPage.js",["65"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport api from \"../apiService\";\r\nimport { Card, Button, Modal } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { getMovieDetailData } from \"../DataFetcher\";\r\n\r\nconst DetailPage = () => {\r\n  // const POSTER_BASE_URL = \"https://image.tmdb.org/t/p/w500/\";\r\n  // const TRAILER_BASE_URL = \"https://www.youtube.com/embed/\";\r\n  // const API_KEY = \"8bb27996f17866f8d8aa2ee7f2bb50aa\";\r\n  const [movieTrailer, setMovieTrailer] = useState(null);\r\n  const [movieDetail, setMovieDetail] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [reviewList, setReviewList] = useState([]);\r\n\r\n  const [showTrailer, setShowTrailer] = useState(false);\r\n\r\n  const params = useParams();\r\n  const MOVIE_ID = params.id;\r\n  const handleCloseTrailer = () => {\r\n    setShowTrailer(false);\r\n  };\r\n\r\n  const handleOpenTrailer = () => {\r\n    setShowTrailer(true);\r\n  };\r\n\r\n  const getMovieDetail = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const movie = await getMovieDetailData(MOVIE_ID);\r\n      console.log(movie);\r\n      setMovieDetail(movie);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      window.alert(\"not found\");\r\n    }\r\n  };\r\n\r\n  const getReview = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      // const API_URL = `https://api.themoviedb.org/3/movie/${MOVIE_ID}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\r\n      // const res = await fetch(API_URL);\r\n      // const data = await res.json();\r\n\r\n      // console.log(\"WHAT IS\", data);\r\n      let res = await api.get(\r\n        `/movie/${MOVIE_ID}/reviews?${process.env.REACT_APP_API_KEY}&language=en-US&page=1`\r\n      );\r\n      setReviewList(res.data.results);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.log(\"Not found\");\r\n    }\r\n  };\r\n\r\n  const getTrailer = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      // const API_URL = `https://api.themoviedb.org/3/movie/${MOVIE_ID}/videos?api_key=${API_KEY}&language=en-US`;\r\n      // const res = await fetch(API_URL);\r\n      // const data = await res.json();\r\n      // console.log(\"movies trailer\", data.results[0].key);\r\n      //\r\n      let res = await api.get(\r\n        `/movie/${MOVIE_ID}/videos?${process.env.REACT_APP_API_KEY}&language=en-US&page=1`\r\n      );\r\n      setMovieTrailer(res.data.results);\r\n      //\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      getMovieDetail();\r\n      getTrailer();\r\n    } else {\r\n      getReview();\r\n    }\r\n  }, []);\r\n\r\n  return isLoading ? (\r\n    <>\r\n      <p>Loading</p>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <div className=\"control-detailpage\">\r\n        <div className=\"nav-bar-1\"></div>\r\n\r\n        <section className=\"all-in\">\r\n          <div className=\"Detail-film d-flex\">\r\n            <div className=\"col-6 photo\">\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src={`${process.env.REACT_APP_IMAGE}${movieDetail.poster_path}`}\r\n              />\r\n            </div>\r\n            <div className=\"col-6 infor\">\r\n              <span className=\"type-film\">{movieDetail.genres[0].name}</span>\r\n              <div className=\"movie-title\">\r\n                <h1>{movieDetail.original_title}</h1>\r\n                <h4>{movieDetail.tagline}</h4>\r\n              </div>\r\n              <div className=\"d-flex control\">\r\n                <div>\r\n                  <i class=\"fab fa-imdb imb-icon\" aria-hidden=\"true\">\r\n                    <span class=\"imb-score\">{movieDetail.vote_average}</span>\r\n                  </i>\r\n                </div>\r\n                <div>\r\n                  <i class=\"fas fa-users users-icon\" aria-hidden=\"true\">\r\n                    <span class=\"imb-score-1\">{movieDetail.popularity}</span>\r\n                  </i>\r\n                </div>\r\n              </div>\r\n              <div className=\"text-group\">\r\n                <p>\r\n                  <b>Release Date: </b>\r\n                  {movieDetail.release_date}\r\n                </p>\r\n                <p>\r\n                  <b>Time remaining: </b>\r\n                  {movieDetail.runtime} minutes\r\n                </p>\r\n                <p>\r\n                  <b>Languages: </b>\r\n                  {movieDetail.spoken_languages[0].english_name}\r\n                </p>\r\n              </div>\r\n              <div className=\"control-fav-list\">\r\n                <Button className=\"button-trailer\" onClick={handleOpenTrailer}>\r\n                  Trailer\r\n                </Button>\r\n              </div>\r\n              <section className=\"cmt\">\r\n                <div className=\"overview\">\r\n                  <h2>Overview</h2>\r\n                  <p>{movieDetail.overview}</p>\r\n                </div>\r\n                <div className=\"comment-review\">\r\n                  <h2>Review ({reviewList.length})</h2>\r\n                  {reviewList.map((review) => (\r\n                    <div>\r\n                      <h2>{review.author_details.username}</h2>\r\n                      <p>{review.content}</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </section>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <Modal show={showTrailer} size=\"xl\" onHide={handleCloseTrailer}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{movieDetail.original_title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {movieTrailer ? (\r\n            <iframe\r\n              src={`${process.env.REACT_APP_VIDEO}${movieTrailer[0].key}`}\r\n              width=\"100%\"\r\n              height=\"900\"\r\n              frameBorder=\"0\"\r\n              allow=\"autoplay; encrypted-media\"\r\n              allowFullScreen\r\n              title=\"video\"\r\n            />\r\n          ) : (\r\n            <p>No Trailer Found For This Movie</p>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseTrailer}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailPage;\r\n","C:\\Users\\thanh\\Coderschool\\project5\\src\\DataFetcher.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":57,"column":6,"nodeType":"72","endLine":57,"endColumn":15,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":66,"column":6,"nodeType":"72","endLine":66,"endColumn":13,"suggestions":"75"},{"ruleId":"70","severity":1,"message":"71","line":57,"column":6,"nodeType":"72","endLine":57,"endColumn":15,"suggestions":"76"},{"ruleId":"70","severity":1,"message":"74","line":66,"column":6,"nodeType":"72","endLine":66,"endColumn":13,"suggestions":"77"},{"ruleId":"70","severity":1,"message":"71","line":59,"column":6,"nodeType":"72","endLine":59,"endColumn":15,"suggestions":"78"},{"ruleId":"70","severity":1,"message":"74","line":68,"column":6,"nodeType":"72","endLine":68,"endColumn":13,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":15},{"ruleId":"70","severity":1,"message":"84","line":88,"column":6,"nodeType":"72","endLine":88,"endColumn":8,"suggestions":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["88"],"React Hook useEffect has missing dependencies: 'getData' and 'getSearch'. Either include them or remove the dependency array.",["89"],["90"],["91"],["92"],["93"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getMovieDetail', 'getReview', 'getTrailer', and 'isLoading'. Either include them or remove the dependency array.",["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"95","fix":"99"},{"desc":"97","fix":"100"},{"desc":"95","fix":"101"},{"desc":"97","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [getData, pageNum]",{"range":"105","text":"106"},"Update the dependencies array to be: [getData, getSearch, query]",{"range":"107","text":"108"},{"range":"109","text":"106"},{"range":"110","text":"108"},{"range":"111","text":"106"},{"range":"112","text":"108"},"Update the dependencies array to be: [getMovieDetail, getReview, getTrailer, isLoading]",{"range":"113","text":"114"},[1613,1622],"[getData, pageNum]",[1747,1754],"[getData, getSearch, query]",[1616,1625],[1750,1757],[1715,1724],[1849,1856],[2682,2684],"[getMovieDetail, getReview, getTrailer, isLoading]"]